[config]
min_version = "0.35.0"

[env]
CARGO_MAKE_CARGO_BUILD_TEST_FLAGS = ""
CI_CARGO_TEST_FLAGS = { value = "--locked -- --nocapture", condition = { env_true = [
    "CI",
] } }
CARGO_MAKE_CLIPPY_ARGS = { value = "-- -D warnings", condition = { env_true = [
    "CI",
] } }

[env.no-default-features]
CARGO_MAKE_CARGO_BUILD_TEST_FLAGS = "--no-default-features"
CARGO_MAKE_RUN_CLIPPY = { unset = true }
CARGO_MAKE_RUN_CHECK_FORMAT = { unset = true }

[env.downcast]
CARGO_MAKE_CARGO_BUILD_TEST_FLAGS = "--no-default-features --features downcast"
CARGO_MAKE_RUN_CLIPPY = { unset = true }
CARGO_MAKE_RUN_CHECK_FORMAT = { unset = true }

# Override for CI flag additions
[tasks.test]
args = [
    "test",
    "@@remove-empty(CARGO_MAKE_CARGO_VERBOSE_FLAGS)",
    "@@split(CARGO_MAKE_CARGO_BUILD_TEST_FLAGS, )",
    "@@split(CI_CARGO_TEST_FLAGS, )",
]

# Let clippy run on non-nightly CI
[tasks.clippy-ci-flow]
condition = { env_set = ["CARGO_MAKE_RUN_CLIPPY"] }

# Let format check run on non-nightly CI
[tasks.check-format-ci-flow]
condition = { env_set = ["CARGO_MAKE_RUN_CHECK_FORMAT"] }

# Run doc lints
[tasks.check-docs]
description = "Checks docs for errors."
category = "Documentation"
install_crate = false
env = { RUSTDOCFLAGS = "-D warnings" }
command = "cargo"
args = [
    "doc",
    "--workspace",
    "--no-deps",
    "@@remove-empty(CARGO_MAKE_CARGO_VERBOSE_FLAGS)",
    "@@split(CARGO_MAKE_CARGO_BUILD_TEST_FLAGS, )",
]

# Add doc lints to CI flow
[tasks.post-ci-flow]
run_task = "check-docs"
